[{"content":"(转载)vscode等宽字体选择:更纱黑体 转自：Vscode 等宽字体\n下载链接 GitHub - be5invis/Sarasa-Gothic: Sarasa Gothic / 更纱黑体 / 更紗黑體 / 更紗ゴシック / 사라사 고딕\n一般安装哪些字体 一般下载微调字体(不带unhinted), 想部分安装就ttf, 选sc简体中文, 编程安装mono, 系统ui更改安装UI, 文章阅读安装gothic\n为什么选择中英文等宽 两个英文符号宽度等于一个中文汉字宽度, 在编辑器或者终端里能很好地对齐\nReleases里的版本说明 ttf和ttc ttf－TrueType字体文件格式\nttc－TrueType字体集文件格式（更纱黑体按照字重进行分类，合并了相近ttf字体文件）\n下载哪个?\n数量: ttf解压后几十个字体安装包, ttc下载解压后只有10个(安装后在字体管理里能看到所有字体)\n大小: ttf全部安装比ttc体积大, 但能选择部分安装\n希望大而全的选ttc, 部分安装的选ttf\nunhinted 无微调字体\n字体微调（FontHinting）是一种字形渲染技术，主要用来对字体显示进行优化，解释起来可能复杂费解。简单说吧，它的主要目的就是在字体显示的时候通过某种技术，对字体的笔画曲线进行调整，将字体显示的更加美观。\n对linux来说，字体微调可以分为字体文件本身自带的微调和系统微调（freetype）。字体本身的微调是字体制作厂商在制作字体时，对单个字体进行的调整，在生成字体时将微调的信息加入字体文件中，这就是为什么我们看更纱黑体的微调字体比起无微调字体要大一些。系统微调就是依靠系统本身的字体渲染引擎对字体进行微调，在linux下主要是就是freetype。 字体微调的直观效果就是，在字体显示时，字体的笔画更加清晰可辨。但是字体文件本身的微调，需要针对一个一个字体进行单独调整。\n需要连字等效果的, 不要选无微调\nGothic/mono/term/UI/fixed 拉丁/希腊/西里尔字符集为 Inter 引号 ( “”) 为全角—— Gothic 引号 ( “”) 窄—— UI 拉丁/希腊/西里尔字符集为 Iosevka 破折号（——）是全宽—— Mono 破折号（——）为半宽—— Term 不连字，破折号（——）为半宽——fixed cl/sc/tc/jk/hc cl－古典汉字字形 sc－简体汉字字形 tc－繁体汉字字形 j－日文汉字字形 k－韩文汉字字形 hc－香港汉字字形 slab 超厚笔划字形\nregular/italic/extralight/light/semibold/bold/extralightitalic/lightitalic/semibolditalic/bolditalic regular－常规字体 italic－斜体字体 extralight－超细字体 light－细体字体 semibold－半粗字体 bold－粗体字体 extralightitalic－超细斜体 lightitalic－细斜字体 semibolditalic－半粗斜体 bolditalic－粗斜字体 不喜欢更纱里的英文? 暂时只发现可以和 ubuntu mono结合使用\nvscode设置 1 2 \u0026#34;editor.fontLigatures\u0026#34;: true, // 是否启用字体连字 \u0026#34;editor.fontFamily\u0026#34;: \u0026#34;Sarasa Mono SC Nerd,Sarasa Mono SC\u0026#34;, Sarasa Mono SC Nerd Nerd fonts 提供了很多图标字体，特别适合各种Shell/NeoVim/Emacs主题，例如 zsh 的 p10k, Powerline 等等。\nGitHub - laishulu/Sarasa-Mono-SC-Nerd\n其他nerd-fonts\n其他方案 思源黑体hw JetBrains Mono 不支持中文等宽 Maple-font : 不喜欢花体不要装italic (推荐) ","date":"2024-01-22T00:00:00Z","permalink":"/p/%E8%BD%AC%E8%BD%BDvscode-%E7%AD%89%E5%AE%BD%E5%AD%97%E4%BD%93/","title":"(转载)Vscode 等宽字体"},{"content":"Loki日志系统部署 介绍 Loki 是一个由Grafana Labs 开发的开源日志聚合系统，旨在为云原生架构提供高效的日志处理解决方案。\nLoki 通过使用类似 Prometheus 的标签索引机制来存储和查询日志数据，这使得它能够快速地进行分布式查询和聚合，而不需要将所有数据都从存储中加载到内存中。Loki还使用了压缩和切割日志数据的方法来减少存储空间的占用，从而更好地适应云原生环境下的高速增长的日志数据量。\nLoki的架构由以下几个主要组件组成：\nPromtail: 负责采集应用程序和系统的日志数据，并将其发送到 Loki 的集群中。\nLoki:负责存储日志数据，提供 HTTP API 的日志查询，以及数据过滤和筛选。\nGrafana: 负责 UI 展示日志数据。\nLoki对比ELK 优点： 存储资源占用小：Loki 可以通过压缩和切割日志数据的方法来控制磁盘占用。 内存资源占用小：Loki 使用标签索引机制存储和查询日志数据，不需要将所有数据都从存储中加载到内存中。\n部署简单：Loki的架构简单，仅部署三个组件即可使用，是一个轻量级的日志聚合系统。\n资源可复用：在日志的可视化上可以使用 Grafana，可以和Prometheus 监控共用，节省系统资源。\n缺点： 系统较新，不如ELK社区活跃。\nELK有强大的可视化功能，Loki的可视化功能较为简单。\nELK 可以连用各种技术进行日志的大数据处理，但是 loki 不行。\nELK是分布式系统，可以通过增加节点来提高扩展性，Loki是单节点系统。\n结合中交项目的特点，故选择Loki日志系统。\nLoki部署示例 下载组件 Loki下载地址：https://github.com/grafana/loki/releases\nPromtail下载地址：https://github.com/grafana/loki/releases\nGrafana下载地址：https://grafana.com/grafana/download?edition=oss\n安装loki 解压loki-linux-amd64.zip到安装目录\n打开安装目录，创建配置文件loki-config.yml，配置文件参考\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 auth_enabled: false server: http_listen_port: 3100 common: ring: instance_addr: 127.0.0.1 kvstore: store: inmemory replication_factor: 1 path_prefix: /data/loki schema_config: configs: - from: 2020-05-15 store: boltdb-shipper object_store: filesystem schema: v11 index: prefix: index_ period: 24h limits_config: reject_old_samples: true reject_old_samples_max_age: 168h chunk_store_config: # 最大可查询历史日期 90天 max_look_back_period: 2160h # 表的保留期90天 table_manager: retention_deletes_enabled: true retention_period: 2160h 启动Loki\n1 nohup ./loki-linux-amd64 -config.file=/data/loki/loki-config.yml \u0026amp; 安装Promtail 解压promtail-linux-amd64.zip到安装目录\n打开安装目录，创建配置文件config-promtail.yml，配置文件参考，clients-url修改为Loki的安装地址\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 server: http_listen_port: 9080 grpc_listen_port: 0 positions: filename: /tmp/positions.yaml # This location needs to be writeable by Promtail. clients: - url: http://10.12.100.83:3100/loki/api/v1/push scrape_configs: - job_name: system pipeline_stages: static_configs: - targets: - localhost labels: env: dev job: applogs # A `job` label is fairly standard in prometheus and useful for linking metrics and logs. host: 10.12.100.85 # A `host` label will help identify logs from this machine vs others __path__: /data/log/*.log # The path matching uses a third party library: https://github.com/bmatcuk/doublestar 启动promtail\n1 nohup ./promtail-linux-amd64 -config.file=/data/promtail/config-promtail.yml \u0026amp; 安装Grafana 1 yum install -y grafana-10.2.0-1.x86_64.rpm Grafana 添加数据源 左侧导航栏选择Connections-Data sources并新建\n选择Loki并创建\nConnection-url填入Loki地址及参数\n点击Save \u0026amp; Test，提示Data source successfully connected即代表成功。\n使用Loki查看日志 点击左侧Explore\n最上面下拉选择刚才创建好的Loki数据源，再选择自定义的label标签，点击Run Query即可看到日志\n查看上下文方法，点击某行日志的的Show context按钮即可\n参考文档 Loki官方部署文档\nLoki配置文件说明\nPromtail配置文件说明\n日志收集系统loki部署\n","date":"2024-01-22T00:00:00Z","permalink":"/p/loki%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E9%83%A8%E7%BD%B2/","title":"Loki日志系统部署"},{"content":"前言 最近在用VSCode写markdown的文件，编辑器一直在给我提示一个插件叫做markdownlint，用了之后感觉很不错，可以帮助自己更加规范的写文章，所以就记录下所有的错误信息以便查找\nMD001 - Heading levels should only increment by one level at a time 标题级数只能每次扩大一个，也就是说不能隔级创建标题，必须h1-h2-h3\u0026hellip;这样\nMD002 - First heading should be a top level heading 文档的第一个标题必须是最高级的标题，也就是h1\nMD003 - Heading style 整篇文档的标题格式要采取统一的\nMD004 - Unordered list style 整篇文档的无序列表的格式要一致\nMD005 - Inconsistent indentation for list items at the same level 同一个等级的列表的缩进要一致\nMD006 - Consider starting bulleted lists at the beginning of the line 一级标题不能够缩进\nMD007 - Unordered list indentation 无序列表嵌套的时候默认采取两个空格的缩进方式\nMD008 - 无 Rules\nMD009 - Trailing spaces 行尾最多可以添加两个空格，超出之后会有警告，最好每次都是两个空格因为两个空格刚好可以用来换行\nMD010 - Hard tabs 不能使用tab来进行缩进，要使用空格\nMD011 - Reversed link syntax 内联形式的链接和创建方式是否错误，中括号和圆括号是否使用正确\nMD012 - Multiple consecutive blank lines 文档中不能有连续的空行（文档末可以有一个空行），在代码块中这个规则不会生效\nMD013 - Line length 默认行的最大长度是80，对表格代码块标题都起效果\nMD014 - Dollar signs used before commands without showing output 在代码块中，终端命令前面不需要有美元符号，如果如果代码块中既有终端命令，也有命令的输出，则终端命令前可以有美元符号($)\nMD018 - No space after hash on atx style heading 标题格式如果是\u0026quot;atx\u0026quot;的话，#号和文字之间需要一个空格隔开\nMD019 - Multiple spaces after hash on atx style heading 标题格式如果是\u0026quot;atx\u0026quot;的话，#号和文字之间只需要一个空格隔开，不需要多个\nMD020 - No space inside hashes on closed atx style heading 在closed_atx格式的标题中，文字和前后的#号之间都需要一个空格隔开\nMD021 - Multiple spaces inside hashes on closed atx style heading 在closed_atx格式的标题中，文字和前后的#号之间只需要一个空格隔开，不能有多余的\nMD022 - Headings should be surrounded by blank lines 标题的上下行必须都是空格\nMD023 - Headings must start at the beginning of the line 标题行不能缩进\nMD024 - Multiple headings with the same content 在文档中不能有重复性的标题\nMD025 - Multiple top level headings in the same document 同一个文档中，只能有一个最高级的标题，默认也只能有一个一级标题\nMD026 - Trailing punctuation in heading 标题的末尾不能有\u0026quot;. , ; : ! ? \u0026ldquo;这些符号\nMD027 - Multiple spaces after blockquote symbol 在创建引用块的时候，右尖号与文字之间必须有且只有一个空格\nMD028 - Blank line inside blockquote 两个引用区块间不能仅用一个空行隔开或者同一引用区块中不能有空行，如果一行中没有内容，则这一行要用\u0026gt;开头\nMD029 - Ordered list item prefix 有序列表的前缀序号格式必须只用1或者从1开始的加1递增数字\nMD030 - Spaces after list markers 列表（有序、无序）的前缀符号和文字之间用1个空格隔开，在列表嵌套或者同一列表项中有多个段落时，无序列表缩进两个空格，有序列表缩进3个空格\nMD031 - Fenced code blocks should be surrounded by blank lines 单独的代码块前后需要用空行隔开（除非是在文档开头或末尾），否则有些解释器不会解释为代码块\nMD032 - Lists should be surrounded by blank lines 列表（有序、无序）前后需要用空行隔开，否则有些解释器不会解释为列表，列表的缩进必须一致，否则会警告\nMD033 - Inline HTML 文档中不允许使用html语句\nMD034 - Bare URL used 单纯的链接地址需要用尖括号 (\u0026lt;\u0026gt;) 包裹，否则有些解释器不会解释为链接\nMD035 - Horizontal rule style 创建水平线时整篇文档要统一，要和文档中第一次创建水平线使用的符号一致\nMD036 - Emphasis used instead of a heading 不能用强调来代替标题 ****\nMD037 - Spaces inside emphasis markers 强调的符号和文字之间不能有空格\nMD038 - Spaces inside code span elements 当用单反引号创建代码段的时候，单反引号和它们之间的代码不能有空格，如果要把单反引号嵌入到代码段的首尾，创建代码段的单反引号和嵌入的单反引号间要有一个空格隔开\nMD039 - Spaces inside link text 链接名和包围它的中括号之间不能有空格，但链接名中间可以有空格\nMD040 - Fenced code blocks should have a language specified 单独的代码块（此处是指上下用三个反引号包围的代码块）应该指定代码块的编程语言，这一点有助于解释器对代码进行代码高亮\nMD041 - First line in file should be a top level heading 文档的第一个非空行应该是文档最高级的标题，默认是1级标题\nMD042 - No empty links 链接的地址不能为空\nMD043 - Required heading structure 要求标题遵循一定的结构，默认是没有规定的结构\nMD044 - Proper names should have the correct capitalization 指定一些名称，会检查它是否有正确的大写\nMD045 - Images should have alternate text (alt text) 图片链接必须包含描述文本 all文本\nMD046 - Code block style 整篇文档采用一致的代码格式\nMD047 - Files should end with a single newline character 文档末尾需要一个空行结尾\n","date":"2024-01-22T00:00:00Z","permalink":"/p/markdownlint%E9%94%99%E8%AF%AF%E9%97%AE%E9%A2%98%E8%A7%A3%E9%87%8A/","title":"MarkdownLint错误问题解释"},{"content":"什么是Github Pages及Gitee Pages 显而易见，从名字上就可以轻易地看出这两个\u0026rsquo;Pages\u0026rsquo;分别属于两家代码托管服务。 对于GitHub Pages，其官方文档是这样介绍的:\nGitHub Pages是一个静态站点托管服务,可以通过部署程序把HTML，CS和JavaScript等文件组成的静态库发布成为一个静态站点。\n而Gitee Pages的核心功能与Github Pages一样，都是提供一个静态站点托管服务。可以通过这两种服务搭建一个轻量化博客或者静态个人站。\nPages服务的优点 相比于著名的WordPress博客系统，Pages服务最大的优势就是轻量化，无需LAMP环境。而且它完全免费，也不需要部署服务器的费用。\nPages快速开始 以Github Pages举例，Gitee Pages操作基本一致。\n在GitHub中新建一个test_pages仓库，选择Repository权限为public。 创建仓库成功后，点击creating a new file，新建一个文件。 文件名必须为index.html。内容为\u0026rsquo;这是一个github pages页面\u0026rsquo;,然后点击save保存。 接着在仓库的setting页签下点击左侧的Pages菜单。 选择对应的分支及目录后，点击save按钮，稍后即可看到成功提示及链接。(注意：假如仓库为private权限，此处会提示需要把仓库转换为public或者升级为GitHub Pro服务才可用) Pages 进阶，使用 Jekyll、Hugo、Hexo、docsify等生成自己的静态网页 Jekyll、Hugo、Hexo、docsify 是简单的博客形态的静态站点生产机器。它有一个模版目录，其中包含原始文本格式的文档，通过 Markdown 以及 Liquid 转化成一个完整的可发布的静态网站，你可以发布在任何你喜爱的服务器上。 Jekyll 使用文档：https://www.jekyll.com.cn/docs/home/ Hugo 使用文档：https://gohugo.io/documentation/ Hexo 使用文档：https://hexo.io/docs/ docsify 使用文档：http://www.yii-china.com/docsify/\n参考链接 GitHub Pages快速入门\nGitee Pages官方文档\nGitHub Pages 搭建教程\n","date":"2022-02-28T18:52:12Z","permalink":"/p/github-pages%E5%8F%8Agitee-pages%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/","title":"Github Pages及Gitee Pages使用教程"},{"content":"mysql提供了两个函数 1 2 3 4 5 6 7 #1.两点距离(1.4142135623730951) select st_distance(point(0,0),point(1,1)); select st_distance(point (120.10591, 30.30163),point(120.13026,30.25961));mysql 5.6 添加 #2.两点球面距离（157249.0357231545m） select st_distance_sphere(point(0,0),point(1,1)); select st_distance_sphere(point (120.10591, 30.30163),point(120.13026,30.25961));This function was added in MySQL 5.7.6. 第一个函数是计算平面坐标系下，两点的距离，就是 1 |AB| = \\sqrt{(x1-x2)^2 + (y1-y2)^2} 如果用于计算地球两点的距离，带入的参数是角度（经纬度），则计算的单位也是相差的角度，用此角度计算距离不准。纬度距离约111km每度，经度距离在赤道平面上是111km每度，随纬度的升高逐渐降低为0。\n第二个函数是计算球面距离的公式，传入的参数是经纬度（经度-180～180，纬度-90～90），返回的值以m为单位的距离。 1 ST_Distance_Sphere(g1, g2 [, radius]) 调用方式\n1 2 select c.*,st_distance_sphere(point(#{baseLongitude}, #{baseLatitude}),point(c.longitude, c.latitude)) as distance from community c 参考链接 mysql根据经纬度求两地距离 Spatial Convenience Functions\n","date":"2021-12-23T16:05:02Z","permalink":"/p/mysql%E6%A0%B9%E6%8D%AE%E7%BB%8F%E7%BA%AC%E5%BA%A6%E6%B1%82%E4%B8%A4%E5%9C%B0%E8%B7%9D%E7%A6%BB/","title":"mysql根据经纬度求两地距离"},{"content":" 使用git remote add添加一个remote,我这里命名为all，后面写上第一个repository地址 1 git remote add all git@github.com:sandrewzq/myGitPage.git 继续添加repository 1 2 git remote set-url --add all git@gitee.com:Sandrew/sandrew.git git remote set-url --add all git@e.coding.net:sandrew/sandrew/sandrew.git 3.完成后使用命令即可看到已添加成功\n1 git remote get-url --all all ","date":"2021-09-28T14:06:58Z","permalink":"/p/git%E5%90%8C%E6%97%B6push%E5%88%B0%E5%A4%9A%E4%B8%AArepository/","title":"git同时push到多个repository"},{"content":"前言 前排提示 本文并不适合对于Linux不了解的新手，对于小白玩家或者新手，强烈推荐此篇教程【Linux\u0026amp;开服教程】从零开始的Linux服务器技术从萌新到入门教程\n前段时间特价买了一台腾讯云服务器(1核2G)，由于比较忙，一直闲置状态。等到年底事情忙完了，就开始搭建一个我的世界服务器，准备春节和朋友一起联机游玩。 系统选择的是 CentOs 7，其他Linux系统操作类似，本文仅作为本人搭建的记录,并不严谨，仅供参考。\n运行环境 操作系统：CentOS 7.6 64位\rJava:jdk1.8.0_241\r我的世界服务端Server:Paper-1.14.4-b236\r我的世界客户端:Minecraft 1.14\rSSH客户端:Xshell\rFTP客户端:XFtp\r准备一台作为服务器的主机 我买的是一台腾讯云服务器，阿里云或者其他云服务器类似，操作很简单。如何购买服务器以及初始化主机可以百度解决。 准备工作 远程连接服务器 使用任意SSH客户端连接到准备好的Linux服务器，我这里使用的是Xshell 新建两个文件夹，download以及minecraft_server。download文件夹用来存储下载的文件，我的世界服务端安装在minecraft_server文件夹。 下载Java 根据机器的情况选择对应版本，我选择的是Linux x64版本 安装Java 安装Java过程可以看Linux 下安装JDK1.8，我也记录下我的安装过程。\n由于我是本地下载的java，所以下载完成后手动用ftp工具上传到之前创建的download目录，一般阿里云和腾讯云的服务器都自动开启了22端口，直接使用工具连接即可。\n然后使用进入jdk-8u241-linux-x64.tar.gz所在目录\n1 cd /download 解压jdk-8u241-linux-x64.tar.gz\n1 tar -zxvf jdk-8u241-linux-x64.tar.gz 解压后完成后会看到jdk 要将jdk安装在usr/java当中，所以在usr目录下新建一个java文件夹\n1 mkdir /usr/java 本人已测试，我的世界服务器server端仅需要jre即可运行，所以我们只需安装jre即可，先进入刚才解压好的java目录\n1 cd /download/jdk1.8.0_241 然后安装jre到/usr/java目录\n1 mv /download/jdk1.8.0_241/jre /usr/java 接下来使用vim修改环境变量\n1 vim /etc/profile 在文件末尾添加，其中JRE_HOME写刚才jre的安装路径\n1 2 3 4 export JRE_HOME=/usr/java/jre export CLASSPATH=.:${JRE_HOME}/lib:$CLASSPATH export JAVA_PATH=${JRE_HOME}/bin export PATH=$PATH:${JAVA_PATH} 完毕后保存退出，在任意目录下执行java命令检查是否设置成功\n1 java -version 显示java版本号即表示成功 安装我的世界服务器server端 首先进入刚才建好的minecraft_server目录，可以使用如下命令下载server端，我选择的是Paper-1.14.4-b23版本。\n1 wget https://yivesmirror.com/files/paper/Paper-1.14.4-b236.jar 也可以去Yive\u0026rsquo;s Mirror自行选择下载任意版本，然后通过ftp工具上传到minecraft_server目录。\n运行我的世界服务器server 进入目录，然后用java -jar命令启动运行文件\n1 2 cd minecraft_server/ java -jar Paper-1.14.4-b236.jar 等待运行完成 完成后输入stop关闭服务器，就可以看到目录下完整的配置文件了 新建后台启动脚本 我们使用screen工具来后台启动，所以先安装screen\n1 yum install screen 安装完成后，使用touch命令新建启动脚本\n1 touch launch.sh 然后编辑lauch.sh文件\n1 vim launch.sh 添加下面的命令，其中-Xmx可以根据自己的机器内存情况适当调整\n1 screen -dmS mc java -Xms512m -Xmx1224m -XX:+AggressiveOpts -XX:+UseCompressedOops -jar /minecraft_server/Paper-1.14.4-b236.jar 然后再新建关闭脚本并编辑\n1 2 touch stop.sh vim stop.sh 添加关闭命令\n1 2 3 screen -dr mc -X stuff \u0026#34;say 服务器将在10S后关闭！\\n\u0026#34; sleep 10 screen -dr mc -X stuff \u0026#34;stop\\n\u0026#34; 两个脚本都创建好之后，使用chmod命令添加执行权限\n1 2 chmod +x launch.sh chmod +x stop.sh 接下来就能看到launch.sh和stop.sh都变成可以执行文件了 大功告成之后我们就可以使用脚本来进行后台起停操作了\n启动服务器\n1 ./launch.sh 关闭服务器\n1 ./stop.sh 其他事项 服务器参数配置 服务器参数使用server.properties文件及其他yml文件设置，具体设置可以参考Minecraft服务器优化教程 —— 让多带50%的玩家不再是梦\n如何使用客户端并游玩 参见我的世界Minecraft Java版 下载指南|文件结构说明|推荐启动器\n服务器运行状态查看 查看游戏目录安装目录下的/minecraft_server/logs文件夹的latest.log文件\n参考资料及感谢 Linux下搭建带mod的Minecraft服务器\nUbuntu(Linux)开服教程\n","date":"2020-01-17T09:49:26Z","permalink":"/p/linux%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C%E6%9C%8D%E5%8A%A1%E5%99%A8/","title":"Linux搭建我的世界服务器"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"/p/math-typesetting/","title":"Math Typesetting"},{"content":"","date":"0001-01-01T00:00:00Z","permalink":"/p/","title":""}]