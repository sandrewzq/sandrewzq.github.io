[{"content":"什么是Github Pages及Gitee Pages 显而易见，从名字上就可以轻易地看出这两个\u0026rsquo;Pages\u0026rsquo;分别属于两家代码托管服务。 对于GitHub Pages，其官方文档是这样介绍的:\nGitHub Pages是一个静态站点托管服务,可以通过部署程序把HTML，CS和JavaScript等文件组成的静态库发布成为一个静态站点。\n而Gitee Pages的核心功能与Github Pages一样，都是提供一个静态站点托管服务。可以通过这两种服务搭建一个轻量化博客或者静态个人站。\nPages服务的优点 相比于著名的WordPress博客系统，Pages服务最大的优势就是轻量化，无需LAMP环境。而且它完全免费，也不需要部署服务器的费用。\nPages快速开始 以Github Pages举例，Gitee Pages操作基本一致。\n在GitHub中新建一个test_pages仓库，选择Repository权限为public。 创建仓库成功后，点击creating a new file，新建一个文件。 文件名必须为index.html。内容为\u0026rsquo;这是一个github pages页面\u0026rsquo;,然后点击save保存。 接着在仓库的setting页签下点击左侧的Pages菜单。 选择对应的分支及目录后，点击save按钮，稍后即可看到成功提示及链接。(注意：假如仓库为private权限，此处会提示需要把仓库转换为public或者升级为GitHub Pro服务才可用) Pages 进阶，使用 Jekyll、Hugo、Hexo、docsify等生成自己的静态网页 Jekyll、Hugo、Hexo、docsify 是简单的博客形态的静态站点生产机器。它有一个模版目录，其中包含原始文本格式的文档，通过 Markdown 以及 Liquid 转化成一个完整的可发布的静态网站，你可以发布在任何你喜爱的服务器上。 Jekyll 使用文档：https://www.jekyll.com.cn/docs/home/ Hugo 使用文档：https://gohugo.io/documentation/ Hexo 使用文档：https://hexo.io/docs/ docsify 使用文档：http://www.yii-china.com/docsify/\n参考链接 GitHub Pages快速入门\nGitee Pages官方文档\nGitHub Pages 搭建教程\n","date":"2022-02-28T18:52:12Z","permalink":"/p/github-pages%E5%8F%8Agitee-pages%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/","title":"Github Pages及Gitee Pages使用教程"},{"content":"mysql提供了两个函数 1 2 3 4 5 6 7 #1.两点距离(1.4142135623730951) select st_distance(point(0,0),point(1,1)); select st_distance(point (120.10591, 30.30163),point(120.13026,30.25961));mysql 5.6 添加 #2.两点球面距离（157249.0357231545m） select st_distance_sphere(point(0,0),point(1,1)); select st_distance_sphere(point (120.10591, 30.30163),point(120.13026,30.25961));This function was added in MySQL 5.7.6. 第一个函数是计算平面坐标系下，两点的距离，就是 1 |AB| = \\sqrt{(x1-x2)^2 + (y1-y2)^2} 如果用于计算地球两点的距离，带入的参数是角度（经纬度），则计算的单位也是相差的角度，用此角度计算距离不准。纬度距离约111km每度，经度距离在赤道平面上是111km每度，随纬度的升高逐渐降低为0。\n第二个函数是计算球面距离的公式，传入的参数是经纬度（经度-180～180，纬度-90～90），返回的值以m为单位的距离。 1 ST_Distance_Sphere(g1, g2 [, radius]) 调用方式\n1 2 select c.*,st_distance_sphere(point(#{baseLongitude}, #{baseLatitude}),point(c.longitude, c.latitude)) as distance from community c 参考链接 mysql根据经纬度求两地距离 Spatial Convenience Functions\n","date":"2021-12-23T16:05:02Z","permalink":"/p/mysql%E6%A0%B9%E6%8D%AE%E7%BB%8F%E7%BA%AC%E5%BA%A6%E6%B1%82%E4%B8%A4%E5%9C%B0%E8%B7%9D%E7%A6%BB/","title":"mysql根据经纬度求两地距离"},{"content":" 使用git remote add添加一个remote,我这里命名为all，后面写上第一个repository地址 1 git remote add all git@github.com:sandrewzq/myGitPage.git 继续添加repository 1 2 git remote set-url --add all git@gitee.com:Sandrew/sandrew.git git remote set-url --add all git@e.coding.net:sandrew/sandrew/sandrew.git 3.完成后使用命令即可看到已添加成功\n1 git remote get-url --all all ","date":"2021-09-28T14:06:58Z","permalink":"/p/git%E5%90%8C%E6%97%B6push%E5%88%B0%E5%A4%9A%E4%B8%AArepository/","title":"git同时push到多个repository"},{"content":"前言 前排提示 本文并不适合对于Linux不了解的新手，对于小白玩家或者新手，强烈推荐此篇教程【Linux\u0026amp;开服教程】从零开始的Linux服务器技术从萌新到入门教程\n前段时间特价买了一台腾讯云服务器(1核2G)，由于比较忙，一直闲置状态。等到年底事情忙完了，就开始搭建一个我的世界服务器，准备春节和朋友一起联机游玩。 系统选择的是 CentOs 7，其他Linux系统操作类似，本文仅作为本人搭建的记录,并不严谨，仅供参考。\n运行环境 操作系统：CentOS 7.6 64位\rJava:jdk1.8.0_241\r我的世界服务端Server:Paper-1.14.4-b236\r我的世界客户端:Minecraft 1.14\rSSH客户端:Xshell\rFTP客户端:XFtp\r准备一台作为服务器的主机 我买的是一台腾讯云服务器，阿里云或者其他云服务器类似，操作很简单。如何购买服务器以及初始化主机可以百度解决。 准备工作 远程连接服务器 使用任意SSH客户端连接到准备好的Linux服务器，我这里使用的是Xshell 新建两个文件夹，download以及minecraft_server。download文件夹用来存储下载的文件，我的世界服务端安装在minecraft_server文件夹。 下载Java 根据机器的情况选择对应版本，我选择的是Linux x64版本 安装Java 安装Java过程可以看Linux 下安装JDK1.8，我也记录下我的安装过程。\n由于我是本地下载的java，所以下载完成后手动用ftp工具上传到之前创建的download目录，一般阿里云和腾讯云的服务器都自动开启了22端口，直接使用工具连接即可。\n然后使用进入jdk-8u241-linux-x64.tar.gz所在目录\n1 cd /download 解压jdk-8u241-linux-x64.tar.gz\n1 tar -zxvf jdk-8u241-linux-x64.tar.gz 解压后完成后会看到jdk 要将jdk安装在usr/java当中，所以在usr目录下新建一个java文件夹\n1 mkdir /usr/java 本人已测试，我的世界服务器server端仅需要jre即可运行，所以我们只需安装jre即可，先进入刚才解压好的java目录\n1 cd /download/jdk1.8.0_241 然后安装jre到/usr/java目录\n1 mv /download/jdk1.8.0_241/jre /usr/java 接下来使用vim修改环境变量\n1 vim /etc/profile 在文件末尾添加，其中JRE_HOME写刚才jre的安装路径\n1 2 3 4 export JRE_HOME=/usr/java/jre export CLASSPATH=.:${JRE_HOME}/lib:$CLASSPATH export JAVA_PATH=${JRE_HOME}/bin export PATH=$PATH:${JAVA_PATH} 完毕后保存退出，在任意目录下执行java命令检查是否设置成功\n1 java -version 显示java版本号即表示成功 安装我的世界服务器server端 首先进入刚才建好的minecraft_server目录，可以使用如下命令下载server端，我选择的是Paper-1.14.4-b23版本。\n1 wget https://yivesmirror.com/files/paper/Paper-1.14.4-b236.jar 也可以去Yive\u0026rsquo;s Mirror自行选择下载任意版本，然后通过ftp工具上传到minecraft_server目录。\n运行我的世界服务器server 进入目录，然后用java -jar命令启动运行文件\n1 2 cd minecraft_server/ java -jar Paper-1.14.4-b236.jar 等待运行完成 完成后输入stop关闭服务器，就可以看到目录下完整的配置文件了 新建后台启动脚本 我们使用screen工具来后台启动，所以先安装screen\n1 yum install screen 安装完成后，使用touch命令新建启动脚本\n1 touch launch.sh 然后编辑lauch.sh文件\n1 vim launch.sh 添加下面的命令，其中-Xmx可以根据自己的机器内存情况适当调整\n1 screen -dmS mc java -Xms512m -Xmx1224m -XX:+AggressiveOpts -XX:+UseCompressedOops -jar /minecraft_server/Paper-1.14.4-b236.jar 然后再新建关闭脚本并编辑\n1 2 touch stop.sh vim stop.sh 添加关闭命令\n1 2 3 screen -dr mc -X stuff \u0026#34;say 服务器将在10S后关闭！\\n\u0026#34; sleep 10 screen -dr mc -X stuff \u0026#34;stop\\n\u0026#34; 两个脚本都创建好之后，使用chmod命令添加执行权限\n1 2 chmod +x launch.sh chmod +x stop.sh 接下来就能看到launch.sh和stop.sh都变成可以执行文件了 大功告成之后我们就可以使用脚本来进行后台起停操作了\n启动服务器\n1 ./launch.sh 关闭服务器\n1 ./stop.sh 其他事项 服务器参数配置 服务器参数使用server.properties文件及其他yml文件设置，具体设置可以参考Minecraft服务器优化教程 —— 让多带50%的玩家不再是梦\n如何使用客户端并游玩 参见我的世界Minecraft Java版 下载指南|文件结构说明|推荐启动器\n服务器运行状态查看 查看游戏目录安装目录下的/minecraft_server/logs文件夹的latest.log文件\n参考资料及感谢 Linux下搭建带mod的Minecraft服务器\nUbuntu(Linux)开服教程\n","date":"2020-01-17T09:49:26Z","permalink":"/p/linux%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C%E6%9C%8D%E5%8A%A1%E5%99%A8/","title":"Linux搭建我的世界服务器"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"/p/math-typesetting/","title":"Math Typesetting"}]